{
	"id": "f63671e0ad8a1ede63ca9187540938e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/base/RouterImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.17;\n\nimport {IAllowanceTransfer} from 'lib/permit2/src/interfaces/IAllowanceTransfer.sol';\nimport {IWETH9} from '../interfaces/external/IWETH9.sol';\n\nstruct RouterParameters {\n    address permit2;\n    address weth9;\n    address v2Factory;\n    address v3Factory;\n    bytes32 pairInitCodeHash;\n    bytes32 poolInitCodeHash;\n}\n\n/// @title Router Immutable Storage (ERC20-only)\ncontract RouterImmutables {\n    /// @dev WETH9 address\n    IWETH9 internal immutable WETH9;\n\n    /// @dev Permit2 address\n    IAllowanceTransfer internal immutable PERMIT2;\n\n    /// @dev The address of UniswapV2Factory\n    address internal immutable UNISWAP_V2_FACTORY;\n\n    /// @dev The UniswapV2Pair initcodehash\n    bytes32 internal immutable UNISWAP_V2_PAIR_INIT_CODE_HASH;\n\n    /// @dev The address of UniswapV3Factory\n    address internal immutable UNISWAP_V3_FACTORY;\n\n    /// @dev The UniswapV3Pool initcodehash\n    bytes32 internal immutable UNISWAP_V3_POOL_INIT_CODE_HASH;\n\n    error InvalidRouterParameters();\n\n    constructor(RouterParameters memory params) {\n        // Basic non-zero checks for critical parameters\n        if (params.permit2 == address(0) || params.weth9 == address(0) || params.v2Factory == address(0)\n            || params.v3Factory == address(0)) revert InvalidRouterParameters();\n\n        if (params.pairInitCodeHash == bytes32(0) || params.poolInitCodeHash == bytes32(0)) {\n            revert InvalidRouterParameters();\n        }\n\n        // Code presence checks for key contracts\n        if (params.permit2.code.length == 0 || params.weth9.code.length == 0) revert InvalidRouterParameters();\n\n        PERMIT2 = IAllowanceTransfer(params.permit2);\n        WETH9 = IWETH9(params.weth9);\n        UNISWAP_V2_FACTORY = params.v2Factory;\n        UNISWAP_V2_PAIR_INIT_CODE_HASH = params.pairInitCodeHash;\n        UNISWAP_V3_FACTORY = params.v3Factory;\n        UNISWAP_V3_POOL_INIT_CODE_HASH = params.poolInitCodeHash;\n    }\n}\n\n"
			},
			"contracts/interfaces/external/IWETH9.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.4;\n\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\n/// @title Interface for WETH9\ninterface IWETH9 is IERC20 {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n}\n"
			},
			"lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n/// @title AllowanceTransfer\n/// @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n/// @dev Requires user's token approval on the Permit2 contract\ninterface IAllowanceTransfer {\n    /// @notice Thrown when an allowance on a token has expired.\n    /// @param deadline The timestamp at which the allowed amount is no longer valid\n    error AllowanceExpired(uint256 deadline);\n\n    /// @notice Thrown when an allowance on a token has been depleted.\n    /// @param amount The maximum amount allowed\n    error InsufficientAllowance(uint256 amount);\n\n    /// @notice Thrown when too many nonces are invalidated.\n    error ExcessiveInvalidation();\n\n    /// @notice Emits an event when the owner successfully invalidates an ordered nonce.\n    event NonceInvalidation(\n        address indexed owner, address indexed token, address indexed spender, uint48 newNonce, uint48 oldNonce\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions on a token for the spender.\n    event Approval(\n        address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\n    event Permit(\n        address indexed owner,\n        address indexed token,\n        address indexed spender,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    );\n\n    /// @notice Emits an event when the owner sets the allowance back to 0 with the lockdown function.\n    event Lockdown(address indexed owner, address token, address spender);\n\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allownce\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The permit message signed for multiple token allowances\n    struct PermitBatch {\n        // the permit data for multiple token allowances\n        PermitDetails[] details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The saved permissions\n    /// @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice A token spender pair.\n    struct TokenSpenderPair {\n        // the token the spender is approved\n        address token;\n        // the spender address\n        address spender;\n    }\n\n    /// @notice Details for a token transfer.\n    struct AllowanceTransferDetails {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address, address, address) external view returns (uint160, uint48, uint48);\n\n    /// @notice Approves the spender to use up to amount of the specified token up until the expiration\n    /// @param token The token to approve\n    /// @param spender The spender address to approve\n    /// @param amount The approved amount of the token\n    /// @param expiration The timestamp at which the approval is no longer valid\n    /// @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitBatch Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n\n    /// @notice Transfer approved tokens in a batch\n    /// @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n    /// @dev Requires the from addresses to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;\n\n    /// @notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n    /// by batch revoking approvals\n    /// @param approvals Array of approvals to revoke.\n    function lockdown(TokenSpenderPair[] calldata approvals) external;\n\n    /// @notice Invalidate nonces for a given (token, spender) pair\n    /// @param token The token to invalidate nonces for\n    /// @param spender The spender to invalidate nonces for\n    /// @param newNonce The new nonce to set. Invalidates all nonces less than it.\n    /// @dev Can't invalidate more than 2**16 nonces per transaction.\n    function invalidateNonces(address token, address spender, uint48 newNonce) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/base/RouterImmutables.sol": {
				"RouterImmutables": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "permit2",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "weth9",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "v2Factory",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "v3Factory",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "pairInitCodeHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "poolInitCodeHash",
											"type": "bytes32"
										}
									],
									"internalType": "struct RouterParameters",
									"name": "params",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InvalidRouterParameters",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"PERMIT2": {
								"details": "Permit2 address"
							},
							"UNISWAP_V2_FACTORY": {
								"details": "The address of UniswapV2Factory"
							},
							"UNISWAP_V2_PAIR_INIT_CODE_HASH": {
								"details": "The UniswapV2Pair initcodehash"
							},
							"UNISWAP_V3_FACTORY": {
								"details": "The address of UniswapV3Factory"
							},
							"UNISWAP_V3_POOL_INIT_CODE_HASH": {
								"details": "The UniswapV3Pool initcodehash"
							},
							"WETH9": {
								"details": "WETH9 address"
							}
						},
						"title": "Router Immutable Storage (ERC20-only)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/base/RouterImmutables.sol\":440:1995  contract RouterImmutables {... */\n  mstore(0x40, 0x0140)\n    /* \"contracts/base/RouterImmutables.sol\":1066:1993  constructor(RouterParameters memory params) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/base/RouterImmutables.sol\":1207:1208  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1181:1209  params.permit2 == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/base/RouterImmutables.sol\":1181:1187  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1181:1195  params.permit2 */\n  0x00\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1181:1209  params.permit2 == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1181:1239  params.permit2 == address(0) || params.weth9 == address(0) */\n  dup1\n  tag_6\n  jumpi\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1237:1238  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1213:1239  params.weth9 == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/base/RouterImmutables.sol\":1213:1219  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1213:1225  params.weth9 */\n  0x20\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1213:1239  params.weth9 == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1181:1239  params.permit2 == address(0) || params.weth9 == address(0) */\ntag_6:\n    /* \"contracts/base/RouterImmutables.sol\":1181:1273  params.permit2 == address(0) || params.weth9 == address(0) || params.v2Factory == address(0) */\n  dup1\n  tag_7\n  jumpi\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1271:1272  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1243:1273  params.v2Factory == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/base/RouterImmutables.sol\":1243:1249  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1243:1259  params.v2Factory */\n  0x40\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1243:1273  params.v2Factory == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1181:1273  params.permit2 == address(0) || params.weth9 == address(0) || params.v2Factory == address(0) */\ntag_7:\n    /* \"contracts/base/RouterImmutables.sol\":1181:1319  params.permit2 == address(0) || params.weth9 == address(0) || params.v2Factory == address(0)... */\n  dup1\n  tag_8\n  jumpi\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1317:1318  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1289:1319  params.v3Factory == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/base/RouterImmutables.sol\":1289:1295  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1289:1305  params.v3Factory */\n  0x60\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1289:1319  params.v3Factory == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1181:1319  params.permit2 == address(0) || params.weth9 == address(0) || params.v2Factory == address(0)... */\ntag_8:\n    /* \"contracts/base/RouterImmutables.sol\":1177:1353  if (params.permit2 == address(0) || params.weth9 == address(0) || params.v2Factory == address(0)... */\n  iszero\n  tag_9\n  jumpi\n    /* \"contracts/base/RouterImmutables.sol\":1328:1353  InvalidRouterParameters() */\n  mload(0x40)\n  0xaf68366300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/base/RouterImmutables.sol\":1177:1353  if (params.permit2 == address(0) || params.weth9 == address(0) || params.v2Factory == address(0)... */\ntag_9:\n    /* \"contracts/base/RouterImmutables.sol\":1403:1404  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1395:1405  bytes32(0) */\n  dup1\n  shl\n    /* \"contracts/base/RouterImmutables.sol\":1368:1374  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1368:1391  params.pairInitCodeHash */\n  0x80\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1368:1405  params.pairInitCodeHash == bytes32(0) */\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1368:1446  params.pairInitCodeHash == bytes32(0) || params.poolInitCodeHash == bytes32(0) */\n  dup1\n  tag_10\n  jumpi\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1444:1445  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1436:1446  bytes32(0) */\n  dup1\n  shl\n    /* \"contracts/base/RouterImmutables.sol\":1409:1415  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1409:1432  params.poolInitCodeHash */\n  0xa0\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1409:1446  params.poolInitCodeHash == bytes32(0) */\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1368:1446  params.pairInitCodeHash == bytes32(0) || params.poolInitCodeHash == bytes32(0) */\ntag_10:\n    /* \"contracts/base/RouterImmutables.sol\":1364:1505  if (params.pairInitCodeHash == bytes32(0) || params.poolInitCodeHash == bytes32(0)) {... */\n  iszero\n  tag_11\n  jumpi\n    /* \"contracts/base/RouterImmutables.sol\":1469:1494  InvalidRouterParameters() */\n  mload(0x40)\n  0xaf68366300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/base/RouterImmutables.sol\":1364:1505  if (params.pairInitCodeHash == bytes32(0) || params.poolInitCodeHash == bytes32(0)) {... */\ntag_11:\n    /* \"contracts/base/RouterImmutables.sol\":1599:1600  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1569:1575  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1569:1583  params.permit2 */\n  0x00\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1569:1595  params.permit2.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"contracts/base/RouterImmutables.sol\":1569:1600  params.permit2.code.length == 0 */\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1569:1633  params.permit2.code.length == 0 || params.weth9.code.length == 0 */\n  dup1\n  tag_12\n  jumpi\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1632:1633  0 */\n  0x00\n    /* \"contracts/base/RouterImmutables.sol\":1604:1610  params */\n  dup2\n    /* \"contracts/base/RouterImmutables.sol\":1604:1616  params.weth9 */\n  0x20\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1604:1628  params.weth9.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"contracts/base/RouterImmutables.sol\":1604:1633  params.weth9.code.length == 0 */\n  eq\n    /* \"contracts/base/RouterImmutables.sol\":1569:1633  params.permit2.code.length == 0 || params.weth9.code.length == 0 */\ntag_12:\n    /* \"contracts/base/RouterImmutables.sol\":1565:1667  if (params.permit2.code.length == 0 || params.weth9.code.length == 0) revert InvalidRouterParameters() */\n  iszero\n  tag_13\n  jumpi\n    /* \"contracts/base/RouterImmutables.sol\":1642:1667  InvalidRouterParameters() */\n  mload(0x40)\n  0xaf68366300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/base/RouterImmutables.sol\":1565:1667  if (params.permit2.code.length == 0 || params.weth9.code.length == 0) revert InvalidRouterParameters() */\ntag_13:\n    /* \"contracts/base/RouterImmutables.sol\":1707:1713  params */\n  dup1\n    /* \"contracts/base/RouterImmutables.sol\":1707:1721  params.permit2 */\n  0x00\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1678:1722  PERMIT2 = IAllowanceTransfer(params.permit2) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1747:1753  params */\n  dup1\n    /* \"contracts/base/RouterImmutables.sol\":1747:1759  params.weth9 */\n  0x20\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1732:1760  WETH9 = IWETH9(params.weth9) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1791:1797  params */\n  dup1\n    /* \"contracts/base/RouterImmutables.sol\":1791:1807  params.v2Factory */\n  0x40\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1770:1807  UNISWAP_V2_FACTORY = params.v2Factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1850:1856  params */\n  dup1\n    /* \"contracts/base/RouterImmutables.sol\":1850:1873  params.pairInitCodeHash */\n  0x80\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1817:1873  UNISWAP_V2_PAIR_INIT_CODE_HASH = params.pairInitCodeHash */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1904:1910  params */\n  dup1\n    /* \"contracts/base/RouterImmutables.sol\":1904:1920  params.v3Factory */\n  0x60\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1883:1920  UNISWAP_V3_FACTORY = params.v3Factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0100\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1963:1969  params */\n  dup1\n    /* \"contracts/base/RouterImmutables.sol\":1963:1986  params.poolInitCodeHash */\n  0xa0\n  add\n  mload\n    /* \"contracts/base/RouterImmutables.sol\":1930:1986  UNISWAP_V3_POOL_INIT_CODE_HASH = params.poolInitCodeHash */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":1066:1993  constructor(RouterParameters memory params) {... */\n  pop\n    /* \"contracts/base/RouterImmutables.sol\":440:1995  contract RouterImmutables {... */\n  jump(tag_14)\n    /* \"#utility.yul\":7:82   */\ntag_15:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_18:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_19:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_20:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_21:\n    /* \"#utility.yul\":834:861   */\n  tag_40\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_42\n  tag_20\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":907:995   */\ntag_41:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_22:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_44\n  tag_15\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_45\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1422   */\ntag_24:\n    /* \"#utility.yul\":1333:1340   */\n  0x00\n    /* \"#utility.yul\":1373:1415   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1366:1371   */\n  dup3\n    /* \"#utility.yul\":1362:1416   */\n  and\n    /* \"#utility.yul\":1351:1416   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1422   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1428:1524   */\ntag_25:\n    /* \"#utility.yul\":1465:1472   */\n  0x00\n    /* \"#utility.yul\":1494:1518   */\n  tag_49\n    /* \"#utility.yul\":1512:1517   */\n  dup3\n    /* \"#utility.yul\":1494:1518   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1483:1518   */\n  swap1\n  pop\n    /* \"#utility.yul\":1428:1524   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1530:1652   */\ntag_26:\n    /* \"#utility.yul\":1603:1627   */\n  tag_51\n    /* \"#utility.yul\":1621:1626   */\n  dup2\n    /* \"#utility.yul\":1603:1627   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1596:1601   */\n  dup2\n    /* \"#utility.yul\":1593:1628   */\n  eq\n    /* \"#utility.yul\":1583:1646   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1642:1643   */\n  0x00\n    /* \"#utility.yul\":1639:1640   */\n  dup1\n    /* \"#utility.yul\":1632:1644   */\n  revert\n    /* \"#utility.yul\":1583:1646   */\ntag_52:\n    /* \"#utility.yul\":1530:1652   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1658:1801   */\ntag_27:\n    /* \"#utility.yul\":1715:1720   */\n  0x00\n    /* \"#utility.yul\":1746:1752   */\n  dup2\n    /* \"#utility.yul\":1740:1753   */\n  mload\n    /* \"#utility.yul\":1731:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_54\n    /* \"#utility.yul\":1789:1794   */\n  dup2\n    /* \"#utility.yul\":1762:1795   */\n  tag_26\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1658:1801   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:1884   */\ntag_28:\n    /* \"#utility.yul\":1844:1851   */\n  0x00\n    /* \"#utility.yul\":1873:1878   */\n  dup2\n    /* \"#utility.yul\":1862:1878   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1884   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1890:2012   */\ntag_29:\n    /* \"#utility.yul\":1963:1987   */\n  tag_57\n    /* \"#utility.yul\":1981:1986   */\n  dup2\n    /* \"#utility.yul\":1963:1987   */\n  tag_28\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1956:1961   */\n  dup2\n    /* \"#utility.yul\":1953:1988   */\n  eq\n    /* \"#utility.yul\":1943:2006   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2002:2003   */\n  0x00\n    /* \"#utility.yul\":1999:2000   */\n  dup1\n    /* \"#utility.yul\":1992:2004   */\n  revert\n    /* \"#utility.yul\":1943:2006   */\ntag_58:\n    /* \"#utility.yul\":1890:2012   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2018:2161   */\ntag_30:\n    /* \"#utility.yul\":2075:2080   */\n  0x00\n    /* \"#utility.yul\":2106:2112   */\n  dup2\n    /* \"#utility.yul\":2100:2113   */\n  mload\n    /* \"#utility.yul\":2091:2113   */\n  swap1\n  pop\n    /* \"#utility.yul\":2122:2155   */\n  tag_60\n    /* \"#utility.yul\":2149:2154   */\n  dup2\n    /* \"#utility.yul\":2122:2155   */\n  tag_29\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2018:2161   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:3540   */\ntag_31:\n    /* \"#utility.yul\":2290:2295   */\n  0x00\n    /* \"#utility.yul\":2334:2338   */\n  0xc0\n    /* \"#utility.yul\":2322:2331   */\n  dup3\n    /* \"#utility.yul\":2317:2320   */\n  dup5\n    /* \"#utility.yul\":2313:2332   */\n  sub\n    /* \"#utility.yul\":2309:2339   */\n  slt\n    /* \"#utility.yul\":2306:2423   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2342:2421   */\n  tag_63\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2306:2423   */\ntag_62:\n    /* \"#utility.yul\":2441:2462   */\n  tag_64\n    /* \"#utility.yul\":2457:2461   */\n  0xc0\n    /* \"#utility.yul\":2441:2462   */\n  tag_22\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2432:2462   */\n  swap1\n  pop\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2564:2624   */\n  tag_65\n    /* \"#utility.yul\":2620:2623   */\n  dup5\n    /* \"#utility.yul\":2611:2617   */\n  dup3\n    /* \"#utility.yul\":2600:2609   */\n  dup6\n    /* \"#utility.yul\":2596:2618   */\n  add\n    /* \"#utility.yul\":2564:2624   */\n  tag_27\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2557:2561   */\n  0x00\n    /* \"#utility.yul\":2550:2555   */\n  dup4\n    /* \"#utility.yul\":2546:2562   */\n  add\n    /* \"#utility.yul\":2539:2625   */\n  mstore\n    /* \"#utility.yul\":2472:2636   */\n  pop\n    /* \"#utility.yul\":2696:2698   */\n  0x20\n    /* \"#utility.yul\":2737:2797   */\n  tag_66\n    /* \"#utility.yul\":2793:2796   */\n  dup5\n    /* \"#utility.yul\":2784:2790   */\n  dup3\n    /* \"#utility.yul\":2773:2782   */\n  dup6\n    /* \"#utility.yul\":2769:2791   */\n  add\n    /* \"#utility.yul\":2737:2797   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2730:2734   */\n  0x20\n    /* \"#utility.yul\":2723:2728   */\n  dup4\n    /* \"#utility.yul\":2719:2735   */\n  add\n    /* \"#utility.yul\":2712:2798   */\n  mstore\n    /* \"#utility.yul\":2646:2809   */\n  pop\n    /* \"#utility.yul\":2873:2875   */\n  0x40\n    /* \"#utility.yul\":2914:2974   */\n  tag_67\n    /* \"#utility.yul\":2970:2973   */\n  dup5\n    /* \"#utility.yul\":2961:2967   */\n  dup3\n    /* \"#utility.yul\":2950:2959   */\n  dup6\n    /* \"#utility.yul\":2946:2968   */\n  add\n    /* \"#utility.yul\":2914:2974   */\n  tag_27\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2907:2911   */\n  0x40\n    /* \"#utility.yul\":2900:2905   */\n  dup4\n    /* \"#utility.yul\":2896:2912   */\n  add\n    /* \"#utility.yul\":2889:2975   */\n  mstore\n    /* \"#utility.yul\":2819:2986   */\n  pop\n    /* \"#utility.yul\":3050:3052   */\n  0x60\n    /* \"#utility.yul\":3091:3151   */\n  tag_68\n    /* \"#utility.yul\":3147:3150   */\n  dup5\n    /* \"#utility.yul\":3138:3144   */\n  dup3\n    /* \"#utility.yul\":3127:3136   */\n  dup6\n    /* \"#utility.yul\":3123:3145   */\n  add\n    /* \"#utility.yul\":3091:3151   */\n  tag_27\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3084:3088   */\n  0x60\n    /* \"#utility.yul\":3077:3082   */\n  dup4\n    /* \"#utility.yul\":3073:3089   */\n  add\n    /* \"#utility.yul\":3066:3152   */\n  mstore\n    /* \"#utility.yul\":2996:3163   */\n  pop\n    /* \"#utility.yul\":3234:3237   */\n  0x80\n    /* \"#utility.yul\":3276:3336   */\n  tag_69\n    /* \"#utility.yul\":3332:3335   */\n  dup5\n    /* \"#utility.yul\":3323:3329   */\n  dup3\n    /* \"#utility.yul\":3312:3321   */\n  dup6\n    /* \"#utility.yul\":3308:3330   */\n  add\n    /* \"#utility.yul\":3276:3336   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3269:3273   */\n  0x80\n    /* \"#utility.yul\":3262:3267   */\n  dup4\n    /* \"#utility.yul\":3258:3274   */\n  add\n    /* \"#utility.yul\":3251:3337   */\n  mstore\n    /* \"#utility.yul\":3173:3348   */\n  pop\n    /* \"#utility.yul\":3419:3422   */\n  0xa0\n    /* \"#utility.yul\":3461:3521   */\n  tag_70\n    /* \"#utility.yul\":3517:3520   */\n  dup5\n    /* \"#utility.yul\":3508:3514   */\n  dup3\n    /* \"#utility.yul\":3497:3506   */\n  dup6\n    /* \"#utility.yul\":3493:3515   */\n  add\n    /* \"#utility.yul\":3461:3521   */\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3454:3458   */\n  0xa0\n    /* \"#utility.yul\":3447:3452   */\n  dup4\n    /* \"#utility.yul\":3443:3459   */\n  add\n    /* \"#utility.yul\":3436:3522   */\n  mstore\n    /* \"#utility.yul\":3358:3533   */\n  pop\n    /* \"#utility.yul\":2198:3540   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3546:3962   */\ntag_3:\n    /* \"#utility.yul\":3648:3654   */\n  0x00\n    /* \"#utility.yul\":3697:3700   */\n  0xc0\n    /* \"#utility.yul\":3685:3694   */\n  dup3\n    /* \"#utility.yul\":3676:3683   */\n  dup5\n    /* \"#utility.yul\":3672:3695   */\n  sub\n    /* \"#utility.yul\":3668:3701   */\n  slt\n    /* \"#utility.yul\":3665:3785   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3704:3783   */\n  tag_73\n  tag_16\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3665:3785   */\ntag_72:\n    /* \"#utility.yul\":3824:3825   */\n  0x00\n    /* \"#utility.yul\":3849:3945   */\n  tag_74\n    /* \"#utility.yul\":3937:3944   */\n  dup5\n    /* \"#utility.yul\":3928:3934   */\n  dup3\n    /* \"#utility.yul\":3917:3926   */\n  dup6\n    /* \"#utility.yul\":3913:3935   */\n  add\n    /* \"#utility.yul\":3849:3945   */\n  tag_31\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3839:3945   */\n  swap2\n  pop\n    /* \"#utility.yul\":3795:3955   */\n  pop\n    /* \"#utility.yul\":3546:3962   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/base/RouterImmutables.sol\":440:1995  contract RouterImmutables {... */\ntag_14:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7d4579ab3c781860520f730aa471b37a7366c1c6efb6e34470da23130f5149f7\")\n  0x00\n  assignImmutable(\"0x6c16bd8c1487da703f7ab92e9636de903fad798d8f79b33ee17a640122eb3349\")\n  0x00\n  assignImmutable(\"0xde838e9e0a4b3e84cad3a9d39f9fe437c20f318b30d3166f08c0cdbee96032ab\")\n  0x00\n  assignImmutable(\"0x9fc1ee6eadd67a54527f8d0704f8da30e58e7e115f3c3a09267ee1b121a8cd57\")\n  0x00\n  assignImmutable(\"0x7c8c0582d21a968b9aa25d45e0e719f1fe93aa4458f5d5939d507b861e308328\")\n  0x00\n  assignImmutable(\"0xf9535bac1c0dacfe011b6a07ce55ad3fdc761de7345d7b004778e93b9d222ae5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/base/RouterImmutables.sol\":440:1995  contract RouterImmutables {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c189db2d06c9f23572e32eaca621ce7311db0c3097ebd2041455b28e6e5ee06164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_232": {
									"entryPoint": null,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_RouterParameters_$96_memory_ptr_fromMemory": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_RouterParameters_$96_memory_ptr_fromMemory": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3965:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:4"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:4",
														"type": ""
													}
												],
												"src": "457:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:4"
															},
															"nodeType": "YulIf",
															"src": "907:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:4",
														"type": ""
													}
												],
												"src": "751:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:4",
														"type": ""
													}
												],
												"src": "1038:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:12:4"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "1173:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1366:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1362:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1351:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1323:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1333:7:4",
														"type": ""
													}
												],
												"src": "1296:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1483:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1512:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1494:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1483:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1455:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1465:7:4",
														"type": ""
													}
												],
												"src": "1428:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1630:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1639:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1642:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1632:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1632:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1632:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1596:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1621:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1603:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1603:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1593:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1586:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:43:4"
															},
															"nodeType": "YulIf",
															"src": "1583:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1566:5:4",
														"type": ""
													}
												],
												"src": "1530:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1740:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1731:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1789:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1762:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1699:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1707:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1715:5:4",
														"type": ""
													}
												],
												"src": "1658:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1852:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1862:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1873:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1862:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1834:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1844:7:4",
														"type": ""
													}
												],
												"src": "1807:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1933:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1990:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1999:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2002:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1992:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1992:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1956:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1981:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1963:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1963:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1953:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:43:4"
															},
															"nodeType": "YulIf",
															"src": "1943:63:4"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:4",
														"type": ""
													}
												],
												"src": "1890:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2091:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2106:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2091:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2149:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2122:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2122:33:4"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2059:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2067:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2075:5:4",
														"type": ""
													}
												],
												"src": "2018:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2296:1244:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2340:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "2342:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2342:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2342:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2317:3:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2313:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2313:19:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2334:4:4",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2309:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:30:4"
															},
															"nodeType": "YulIf",
															"src": "2306:117:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2432:30:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:4:4",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2441:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2432:5:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2472:164:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2510:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2514:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2550:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2557:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2546:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2546:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2600:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2611:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2596:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2596:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2620:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "2564:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2564:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2539:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2539:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2539:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2646:163:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2682:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2686:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2723:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2730:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2719:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2719:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2773:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2784:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2769:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2769:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2793:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "2737:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2737:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2712:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2712:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2819:167:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2859:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2873:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2863:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2900:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2907:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2896:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2896:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2950:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2961:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2946:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2946:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2970:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "2914:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2914:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2889:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2889:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2889:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2996:167:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3036:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3040:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3077:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3084:4:4",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3073:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3073:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3127:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3138:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3123:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3123:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3147:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "3091:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3091:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3066:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3066:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3066:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3173:175:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3262:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3269:4:4",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3258:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3258:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3312:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3323:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3308:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3308:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3332:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bytes32_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "3276:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3276:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3251:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3251:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3251:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3358:175:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3405:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:3:4",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3409:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3447:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3454:4:4",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3443:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3443:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3497:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3508:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3493:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3493:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3517:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bytes32_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "3461:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3436:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3436:86:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_RouterParameters_$96_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2271:9:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2282:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2290:5:4",
														"type": ""
													}
												],
												"src": "2198:1342:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3655:307:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3702:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3704:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3704:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3704:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3676:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3685:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3672:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3672:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:33:4"
															},
															"nodeType": "YulIf",
															"src": "3665:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3795:160:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3810:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3824:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3814:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3839:106:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_RouterParameters_$96_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3849:63:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:96:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3839:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_RouterParameters_$96_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3625:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3636:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3648:6:4",
														"type": ""
													}
												],
												"src": "3546:416:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // struct RouterParameters\n    function abi_decode_t_struct$_RouterParameters_$96_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xc0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xc0)\n\n        {\n            // permit2\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // weth9\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // v2Factory\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // v3Factory\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // pairInitCodeHash\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolInitCodeHash\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_RouterParameters_$96_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_RouterParameters_$96_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61014060405234801561001157600080fd5b50604051610598380380610598833981810160405281019061003391906104f1565b600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614806100a25750600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b806100dd5750600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff16145b806101185750600073ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff16145b1561014f576040517faf68366300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000801b8160800151148061016a57506000801b8160a00151145b156101a1576040517faf68366300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816000015173ffffffffffffffffffffffffffffffffffffffff163b14806101e657506000816020015173ffffffffffffffffffffffffffffffffffffffff163b145b1561021d576040517faf68366300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000015173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050806020015173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806040015173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050806080015160e08181525050806060015173ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff16815250508060a0015161012081815250505061051e565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61037a82610331565b810181811067ffffffffffffffff8211171561039957610398610342565b5b80604052505050565b60006103ac61031d565b90506103b88282610371565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103e8826103bd565b9050919050565b6103f8816103dd565b811461040357600080fd5b50565b600081519050610415816103ef565b92915050565b6000819050919050565b61042e8161041b565b811461043957600080fd5b50565b60008151905061044b81610425565b92915050565b600060c082840312156104675761046661032c565b5b61047160c06103a2565b9050600061048184828501610406565b600083015250602061049584828501610406565b60208301525060406104a984828501610406565b60408301525060606104bd84828501610406565b60608301525060806104d18482850161043c565b60808301525060a06104e58482850161043c565b60a08301525092915050565b600060c0828403121561050757610506610327565b5b600061051584828501610451565b91505092915050565b60805160a05160c05160e0516101005161012051603f610559600039600050506000505060005050600050506000505060005050603f6000f3fe6080604052600080fdfea2646970667358221220c189db2d06c9f23572e32eaca621ce7311db0c3097ebd2041455b28e6e5ee06164736f6c63430008110033",
							"opcodes": "PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x598 CODESIZE SUB DUP1 PUSH2 0x598 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x33 SWAP2 SWAP1 PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xDD JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x118 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x14F JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF68366300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x80 ADD MLOAD EQ DUP1 PUSH2 0x16A JUMPI POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0xA0 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF68366300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ DUP1 PUSH2 0x1E6 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF68366300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xA0 ADD MLOAD PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x37A DUP3 PUSH2 0x331 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x399 JUMPI PUSH2 0x398 PUSH2 0x342 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8 DUP3 DUP3 PUSH2 0x371 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 PUSH2 0x3BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F8 DUP2 PUSH2 0x3DD JUMP JUMPDEST DUP2 EQ PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x415 DUP2 PUSH2 0x3EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42E DUP2 PUSH2 0x41B JUMP JUMPDEST DUP2 EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x44B DUP2 PUSH2 0x425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x467 JUMPI PUSH2 0x466 PUSH2 0x32C JUMP JUMPDEST JUMPDEST PUSH2 0x471 PUSH1 0xC0 PUSH2 0x3A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x481 DUP5 DUP3 DUP6 ADD PUSH2 0x406 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x495 DUP5 DUP3 DUP6 ADD PUSH2 0x406 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x4A9 DUP5 DUP3 DUP6 ADD PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x4BD DUP5 DUP3 DUP6 ADD PUSH2 0x406 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x4D1 DUP5 DUP3 DUP6 ADD PUSH2 0x43C JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x4E5 DUP5 DUP3 DUP6 ADD PUSH2 0x43C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP5 DUP3 DUP6 ADD PUSH2 0x451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH1 0x3F PUSH2 0x559 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP10 0xDB 0x2D MOD 0xC9 CALLCODE CALLDATALOAD PUSH19 0xE32EACA621CE7311DB0C3097EBD2041455B28E PUSH15 0x5EE06164736F6C6343000811003300 ",
							"sourceMap": "440:1555:1:-:0;;;1066:927;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1207:1;1181:28;;:6;:14;;;:28;;;:58;;;;1237:1;1213:26;;:6;:12;;;:26;;;1181:58;:92;;;;1271:1;1243:30;;:6;:16;;;:30;;;1181:92;:138;;;;1317:1;1289:30;;:6;:16;;;:30;;;1181:138;1177:176;;;1328:25;;;;;;;;;;;;;;1177:176;1403:1;1395:10;;1368:6;:23;;;:37;:78;;;;1444:1;1436:10;;1409:6;:23;;;:37;1368:78;1364:141;;;1469:25;;;;;;;;;;;;;;1364:141;1599:1;1569:6;:14;;;:26;;;:31;:64;;;;1632:1;1604:6;:12;;;:24;;;:29;1569:64;1565:102;;;1642:25;;;;;;;;;;;;;;1565:102;1707:6;:14;;;1678:44;;;;;;;;;;1747:6;:12;;;1732:28;;;;;;;;;;1791:6;:16;;;1770:37;;;;;;;;;;1850:6;:23;;;1817:56;;;;;;1904:6;:16;;;1883:37;;;;;;;;;;1963:6;:23;;;1930:56;;;;;;1066:927;440:1555;;7:75:4;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1296:126::-;1333:7;1373:42;1366:5;1362:54;1351:65;;1296:126;;;:::o;1428:96::-;1465:7;1494:24;1512:5;1494:24;:::i;:::-;1483:35;;1428:96;;;:::o;1530:122::-;1603:24;1621:5;1603:24;:::i;:::-;1596:5;1593:35;1583:63;;1642:1;1639;1632:12;1583:63;1530:122;:::o;1658:143::-;1715:5;1746:6;1740:13;1731:22;;1762:33;1789:5;1762:33;:::i;:::-;1658:143;;;;:::o;1807:77::-;1844:7;1873:5;1862:16;;1807:77;;;:::o;1890:122::-;1963:24;1981:5;1963:24;:::i;:::-;1956:5;1953:35;1943:63;;2002:1;1999;1992:12;1943:63;1890:122;:::o;2018:143::-;2075:5;2106:6;2100:13;2091:22;;2122:33;2149:5;2122:33;:::i;:::-;2018:143;;;;:::o;2198:1342::-;2290:5;2334:4;2322:9;2317:3;2313:19;2309:30;2306:117;;;2342:79;;:::i;:::-;2306:117;2441:21;2457:4;2441:21;:::i;:::-;2432:30;;2524:1;2564:60;2620:3;2611:6;2600:9;2596:22;2564:60;:::i;:::-;2557:4;2550:5;2546:16;2539:86;2472:164;2696:2;2737:60;2793:3;2784:6;2773:9;2769:22;2737:60;:::i;:::-;2730:4;2723:5;2719:16;2712:86;2646:163;2873:2;2914:60;2970:3;2961:6;2950:9;2946:22;2914:60;:::i;:::-;2907:4;2900:5;2896:16;2889:86;2819:167;3050:2;3091:60;3147:3;3138:6;3127:9;3123:22;3091:60;:::i;:::-;3084:4;3077:5;3073:16;3066:86;2996:167;3234:3;3276:60;3332:3;3323:6;3312:9;3308:22;3276:60;:::i;:::-;3269:4;3262:5;3258:16;3251:86;3173:175;3419:3;3461:60;3517:3;3508:6;3497:9;3493:22;3461:60;:::i;:::-;3454:4;3447:5;3443:16;3436:86;3358:175;2198:1342;;;;:::o;3546:416::-;3648:6;3697:3;3685:9;3676:7;3672:23;3668:33;3665:120;;;3704:79;;:::i;:::-;3665:120;3824:1;3849:96;3937:7;3928:6;3917:9;3913:22;3849:96;:::i;:::-;3839:106;;3795:160;3546:416;;;;:::o;440:1555:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c189db2d06c9f23572e32eaca621ce7311db0c3097ebd2041455b28e6e5ee06164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP10 0xDB 0x2D MOD 0xC9 CALLCODE CALLDATALOAD PUSH19 0xE32EACA621CE7311DB0C3097EBD2041455B28E PUSH15 0x5EE06164736F6C6343000811003300 ",
							"sourceMap": "440:1555:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1066,
									"end": 1993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1207,
									"end": 1208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1209,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1181,
									"end": 1209,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1187,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1195,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1209,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1181,
									"end": 1209,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1209,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1239,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1181,
									"end": 1239,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1237,
									"end": 1238,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1213,
									"end": 1239,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1219,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1225,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1213,
									"end": 1225,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1225,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1239,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1213,
									"end": 1239,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1239,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1239,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1181,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1273,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1181,
									"end": 1273,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1273,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1273,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1243,
									"end": 1273,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1243,
									"end": 1249,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1243,
									"end": 1259,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1243,
									"end": 1259,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1243,
									"end": 1259,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1243,
									"end": 1273,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1243,
									"end": 1273,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1243,
									"end": 1273,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1273,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1181,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1319,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1181,
									"end": 1319,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1319,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1289,
									"end": 1319,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1289,
									"end": 1319,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1295,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1305,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1289,
									"end": 1305,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1305,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1319,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1289,
									"end": 1319,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1319,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1319,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1181,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1353,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1177,
									"end": 1353,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "AF68366300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1177,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 1404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1405,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1405,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1368,
									"end": 1391,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1391,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1405,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1446,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1368,
									"end": 1446,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1446,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1444,
									"end": 1445,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1446,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1446,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1409,
									"end": 1415,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1409,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1409,
									"end": 1432,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1409,
									"end": 1432,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1409,
									"end": 1446,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1446,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1368,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1505,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1364,
									"end": 1505,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "AF68366300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1505,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1364,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1569,
									"end": 1575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1569,
									"end": 1583,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1583,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1595,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1569,
									"end": 1595,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1595,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1600,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1633,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1569,
									"end": 1633,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1633,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1604,
									"end": 1610,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1616,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1604,
									"end": 1616,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1616,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1604,
									"end": 1628,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1628,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1633,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1633,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1569,
									"end": 1633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1667,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1667,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1565,
									"end": 1667,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "PUSH",
									"source": 1,
									"value": "AF68366300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1667,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1565,
									"end": 1667,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1713,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1721,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1721,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1722,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1759,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1747,
									"end": 1759,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1759,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1791,
									"end": 1797,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1791,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1791,
									"end": 1807,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1791,
									"end": 1807,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 1807,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1873,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1850,
									"end": 1873,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1873,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1873,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1817,
									"end": 1873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1873,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1904,
									"end": 1910,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1904,
									"end": 1920,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1904,
									"end": 1920,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1904,
									"end": 1920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1883,
									"end": 1920,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1969,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1986,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1963,
									"end": 1986,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1986,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1986,
									"name": "PUSH",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 1930,
									"end": 1986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1986,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1986,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1986,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1993,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1422,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1296,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1333,
									"end": 1340,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1373,
									"end": 1415,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1366,
									"end": 1371,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1362,
									"end": 1416,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 1416,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 1416,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1422,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1422,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1422,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1422,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1428,
									"end": 1524,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1428,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1465,
									"end": 1472,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1512,
									"end": 1517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1494,
									"end": 1518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1483,
									"end": 1518,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1483,
									"end": 1518,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1428,
									"end": 1524,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1428,
									"end": 1524,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1428,
									"end": 1524,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1428,
									"end": 1524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1530,
									"end": 1652,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1530,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1621,
									"end": 1626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1603,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1627,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1603,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1596,
									"end": 1601,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1593,
									"end": 1628,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1583,
									"end": 1646,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1583,
									"end": 1646,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1642,
									"end": 1643,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1639,
									"end": 1640,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 1644,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1583,
									"end": 1646,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1583,
									"end": 1646,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1530,
									"end": 1652,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1530,
									"end": 1652,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1658,
									"end": 1801,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1658,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1720,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1752,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 1753,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1731,
									"end": 1753,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1731,
									"end": 1753,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1789,
									"end": 1794,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1658,
									"end": 1801,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1658,
									"end": 1801,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1658,
									"end": 1801,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1658,
									"end": 1801,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1658,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1844,
									"end": 1851,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1873,
									"end": 1878,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 1878,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 1878,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1807,
									"end": 1884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1890,
									"end": 2012,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1890,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 1981,
									"end": 1986,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1963,
									"end": 1987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1956,
									"end": 1961,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1953,
									"end": 1988,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2002,
									"end": 2003,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1992,
									"end": 2004,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1890,
									"end": 2012,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1890,
									"end": 2012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2075,
									"end": 2080,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2106,
									"end": 2112,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2091,
									"end": 2113,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2091,
									"end": 2113,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2149,
									"end": 2154,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 2122,
									"end": 2155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2018,
									"end": 2161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 3540,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 2198,
									"end": 3540,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2290,
									"end": 2295,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2334,
									"end": 2338,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 2322,
									"end": 2331,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2317,
									"end": 2320,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2313,
									"end": 2332,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2309,
									"end": 2339,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2306,
									"end": 2423,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2306,
									"end": 2423,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2306,
									"end": 2423,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2342,
									"end": 2421,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2342,
									"end": 2421,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 2342,
									"end": 2421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2342,
									"end": 2421,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2342,
									"end": 2421,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2306,
									"end": 2423,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2306,
									"end": 2423,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2441,
									"end": 2462,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2457,
									"end": 2461,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 2441,
									"end": 2462,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2441,
									"end": 2462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2441,
									"end": 2462,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2441,
									"end": 2462,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2432,
									"end": 2462,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2432,
									"end": 2462,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2564,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2620,
									"end": 2623,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2611,
									"end": 2617,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2600,
									"end": 2609,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2596,
									"end": 2618,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2564,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2564,
									"end": 2624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2564,
									"end": 2624,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2564,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2557,
									"end": 2561,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2550,
									"end": 2555,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2546,
									"end": 2562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2539,
									"end": 2625,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2472,
									"end": 2636,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2696,
									"end": 2698,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2737,
									"end": 2797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2793,
									"end": 2796,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2769,
									"end": 2791,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2737,
									"end": 2797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2737,
									"end": 2797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2737,
									"end": 2797,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2737,
									"end": 2797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2730,
									"end": 2734,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2728,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2719,
									"end": 2735,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2712,
									"end": 2798,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2646,
									"end": 2809,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2873,
									"end": 2875,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2914,
									"end": 2974,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2970,
									"end": 2973,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2961,
									"end": 2967,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2950,
									"end": 2959,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2914,
									"end": 2974,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2914,
									"end": 2974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2914,
									"end": 2974,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2914,
									"end": 2974,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2900,
									"end": 2905,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2896,
									"end": 2912,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2889,
									"end": 2975,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2819,
									"end": 2986,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3050,
									"end": 3052,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3091,
									"end": 3151,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3147,
									"end": 3150,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3138,
									"end": 3144,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3127,
									"end": 3136,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3123,
									"end": 3145,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3091,
									"end": 3151,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3091,
									"end": 3151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3091,
									"end": 3151,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3091,
									"end": 3151,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3084,
									"end": 3088,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3077,
									"end": 3082,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3073,
									"end": 3089,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3066,
									"end": 3152,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3234,
									"end": 3237,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3276,
									"end": 3336,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 3332,
									"end": 3335,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3323,
									"end": 3329,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3308,
									"end": 3330,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3276,
									"end": 3336,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3276,
									"end": 3336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3276,
									"end": 3336,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 3276,
									"end": 3336,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3262,
									"end": 3267,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3258,
									"end": 3274,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3251,
									"end": 3337,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3173,
									"end": 3348,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3419,
									"end": 3422,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 3461,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 3517,
									"end": 3520,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3508,
									"end": 3514,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3497,
									"end": 3506,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3493,
									"end": 3515,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3461,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3461,
									"end": 3521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3461,
									"end": 3521,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 3461,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3454,
									"end": 3458,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 3447,
									"end": 3452,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3443,
									"end": 3459,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3436,
									"end": 3522,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3358,
									"end": 3533,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 3540,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 3540,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 3540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 3540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 3540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3546,
									"end": 3962,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3546,
									"end": 3962,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3648,
									"end": 3654,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3697,
									"end": 3700,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 3685,
									"end": 3694,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3676,
									"end": 3683,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3672,
									"end": 3695,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3668,
									"end": 3701,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 3665,
									"end": 3785,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3665,
									"end": 3785,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 3665,
									"end": 3785,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 3704,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 3704,
									"end": 3783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3783,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 3704,
									"end": 3783,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3665,
									"end": 3785,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 3665,
									"end": 3785,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3824,
									"end": 3825,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3945,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 3937,
									"end": 3944,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3928,
									"end": 3934,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3917,
									"end": 3926,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3913,
									"end": 3935,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3945,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 3849,
									"end": 3945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3945,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 3849,
									"end": 3945,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3839,
									"end": 3945,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3839,
									"end": 3945,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3795,
									"end": 3955,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3546,
									"end": 3962,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3546,
									"end": 3962,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3546,
									"end": 3962,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3546,
									"end": 3962,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3546,
									"end": 3962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 1995,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c189db2d06c9f23572e32eaca621ce7311db0c3097ebd2041455b28e6e5ee06164736f6c63430008110033",
									".code": [
										{
											"begin": 440,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 440,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 1995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 440,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 1995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 440,
											"end": 1995,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/base/RouterImmutables.sol",
								"contracts/interfaces/external/IWETH9.sol",
								"lib/permit2/src/interfaces/IAllowanceTransfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"permit2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"weth9\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"v2Factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"v3Factory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"pairInitCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"poolInitCodeHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RouterParameters\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidRouterParameters\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"PERMIT2\":{\"details\":\"Permit2 address\"},\"UNISWAP_V2_FACTORY\":{\"details\":\"The address of UniswapV2Factory\"},\"UNISWAP_V2_PAIR_INIT_CODE_HASH\":{\"details\":\"The UniswapV2Pair initcodehash\"},\"UNISWAP_V3_FACTORY\":{\"details\":\"The address of UniswapV3Factory\"},\"UNISWAP_V3_POOL_INIT_CODE_HASH\":{\"details\":\"The UniswapV3Pool initcodehash\"},\"WETH9\":{\"details\":\"WETH9 address\"}},\"title\":\"Router Immutable Storage (ERC20-only)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/RouterImmutables.sol\":\"RouterImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"contracts/base/RouterImmutables.sol\":{\"keccak256\":\"0x4589c74a2dc26510fd08829600f05b5dfe66eee31e510d48d8de084ef91d1181\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c30c65e52c73ed8addbdddde3ce7a5949839ba9c2821b2db005e235334b388db\",\"dweb:/ipfs/QmXYn2yRHcooDao7pMKNoT6ChPg3XLADxtC9ojHZT96uqV\"]},\"contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0xb059e143d7d3864bfc53708d54bb2a35c9115d807de3ed75a6a033be24b33b6c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a5b7afc743e6fecbf23563b43482218a6bdd58e3cdd1ef3e36a9d07fd4ff4c26\",\"dweb:/ipfs/QmTN8CozJtaS8GAgDUMmWnnfc6Er9HRU9X8RSQJx5oZmJT\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/IWETH9.sol": {
				"IWETH9": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/IWETH9.sol\":\"IWETH9\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0xb059e143d7d3864bfc53708d54bb2a35c9115d807de3ed75a6a033be24b33b6c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a5b7afc743e6fecbf23563b43482218a6bdd58e3cdd1ef3e36a9d07fd4ff4c26\",\"dweb:/ipfs/QmTN8CozJtaS8GAgDUMmWnnfc6Er9HRU9X8RSQJx5oZmJT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				}
			},
			"lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
				"IAllowanceTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"details": "The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"title": "AllowanceTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"lockdown((address,address)[])": "cc53287f",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"title\":\"AllowanceTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":\"IAllowanceTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"notice": "Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "215:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "397:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "406:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "428:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "448:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:0"
									},
									"src": "391:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "628:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "637:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "660:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "685:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:0"
									},
									"src": "622:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:0"
									},
									"scope": 77,
									"src": "776:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "972:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:0"
									},
									"scope": 77,
									"src": "913:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1235:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1268:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:0"
									},
									"scope": 77,
									"src": "1205:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1568:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1583:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1623:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:0"
									},
									"scope": 77,
									"src": "1549:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2344:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:0"
									},
									"scope": 77,
									"src": "2310:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2713:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2727:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2739:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2772:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:0"
									},
									"scope": 77,
									"src": "2691:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "205:2575:0",
							"usedErrors": []
						}
					],
					"src": "106:2675:0"
				},
				"id": 0
			},
			"contracts/base/RouterImmutables.sol": {
				"ast": {
					"absolutePath": "contracts/base/RouterImmutables.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							453
						],
						"IWETH9": [
							251
						],
						"RouterImmutables": [
							233
						],
						"RouterParameters": [
							96
						]
					},
					"id": 234,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"absolutePath": "lib/permit2/src/interfaces/IAllowanceTransfer.sol",
							"file": "lib/permit2/src/interfaces/IAllowanceTransfer.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 454,
							"src": "71:85:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 80,
										"name": "IAllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 453,
										"src": "79:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/external/IWETH9.sol",
							"file": "../interfaces/external/IWETH9.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 252,
							"src": "157:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 82,
										"name": "IWETH9",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 251,
										"src": "165:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "RouterParameters",
							"id": 96,
							"members": [
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "permit2",
									"nameLocation": "254:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "246:15:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "246:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 87,
									"mutability": "mutable",
									"name": "weth9",
									"nameLocation": "275:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "267:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 86,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "267:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "v2Factory",
									"nameLocation": "294:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "286:17:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 88,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "v3Factory",
									"nameLocation": "317:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "309:17:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 90,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "309:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 93,
									"mutability": "mutable",
									"name": "pairInitCodeHash",
									"nameLocation": "340:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "332:24:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 92,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "poolInitCodeHash",
									"nameLocation": "370:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "362:24:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 94,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "362:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RouterParameters",
							"nameLocation": "223:16:1",
							"nodeType": "StructDefinition",
							"scope": 234,
							"src": "216:173:1",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RouterImmutables",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 97,
								"nodeType": "StructuredDocumentation",
								"src": "391:49:1",
								"text": "@title Router Immutable Storage (ERC20-only)"
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233
							],
							"name": "RouterImmutables",
							"nameLocation": "449:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "472:22:1",
										"text": "@dev WETH9 address"
									},
									"id": 101,
									"mutability": "immutable",
									"name": "WETH9",
									"nameLocation": "525:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "499:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWETH9_$251",
										"typeString": "contract IWETH9"
									},
									"typeName": {
										"id": 100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 99,
											"name": "IWETH9",
											"nameLocations": [
												"499:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 251,
											"src": "499:6:1"
										},
										"referencedDeclaration": 251,
										"src": "499:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH9_$251",
											"typeString": "contract IWETH9"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "537:24:1",
										"text": "@dev Permit2 address"
									},
									"id": 105,
									"mutability": "immutable",
									"name": "PERMIT2",
									"nameLocation": "604:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "566:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAllowanceTransfer_$453",
										"typeString": "contract IAllowanceTransfer"
									},
									"typeName": {
										"id": 104,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 103,
											"name": "IAllowanceTransfer",
											"nameLocations": [
												"566:18:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 453,
											"src": "566:18:1"
										},
										"referencedDeclaration": 453,
										"src": "566:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllowanceTransfer_$453",
											"typeString": "contract IAllowanceTransfer"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "618:40:1",
										"text": "@dev The address of UniswapV2Factory"
									},
									"id": 108,
									"mutability": "immutable",
									"name": "UNISWAP_V2_FACTORY",
									"nameLocation": "690:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "663:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "715:39:1",
										"text": "@dev The UniswapV2Pair initcodehash"
									},
									"id": 111,
									"mutability": "immutable",
									"name": "UNISWAP_V2_PAIR_INIT_CODE_HASH",
									"nameLocation": "786:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "759:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 110,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "759:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "823:40:1",
										"text": "@dev The address of UniswapV3Factory"
									},
									"id": 114,
									"mutability": "immutable",
									"name": "UNISWAP_V3_FACTORY",
									"nameLocation": "895:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "868:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 113,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "868:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "920:39:1",
										"text": "@dev The UniswapV3Pool initcodehash"
									},
									"id": 117,
									"mutability": "immutable",
									"name": "UNISWAP_V3_POOL_INIT_CODE_HASH",
									"nameLocation": "991:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "964:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 116,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "964:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "af683663",
									"id": 119,
									"name": "InvalidRouterParameters",
									"nameLocation": "1034:23:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1057:2:1"
									},
									"src": "1028:32:1"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "1110:883:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 125,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "1181:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																			"typeString": "struct RouterParameters memory"
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1188:7:1",
																	"memberName": "permit2",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 85,
																	"src": "1181:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1207:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1199:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 127,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1199:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1199:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1181:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 132,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "1213:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																			"typeString": "struct RouterParameters memory"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1220:5:1",
																	"memberName": "weth9",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "1213:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1237:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1229:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 134,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1229:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1229:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1213:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1181:58:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 140,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "1243:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																		"typeString": "struct RouterParameters memory"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1250:9:1",
																"memberName": "v2Factory",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 89,
																"src": "1243:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1271:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1263:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 142,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1263:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1263:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1243:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1181:92:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 148,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1289:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																	"typeString": "struct RouterParameters memory"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1296:9:1",
															"memberName": "v3Factory",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 91,
															"src": "1289:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1317:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1309:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 150,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1309:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1309:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1289:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1181:138:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "1177:176:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 156,
															"name": "InvalidRouterParameters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1328:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1328:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 158,
													"nodeType": "RevertStatement",
													"src": "1321:32:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 160,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1368:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																	"typeString": "struct RouterParameters memory"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1375:16:1",
															"memberName": "pairInitCodeHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "1368:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1403:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1395:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 162,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1395:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1395:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "1368:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 167,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1409:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																	"typeString": "struct RouterParameters memory"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1416:16:1",
															"memberName": "poolInitCodeHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "1409:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1444:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1436:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 169,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1436:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1436:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "1409:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1368:78:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"nodeType": "IfStatement",
												"src": "1364:141:1",
												"trueBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "1448:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 175,
																	"name": "InvalidRouterParameters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "1469:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1469:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 177,
															"nodeType": "RevertStatement",
															"src": "1462:32:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"expression": {
																		"id": 180,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "1569:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																			"typeString": "struct RouterParameters memory"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1576:7:1",
																	"memberName": "permit2",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 85,
																	"src": "1569:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1584:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "1569:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1589:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1569:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1599:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1569:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"expression": {
																		"id": 186,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "1604:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																			"typeString": "struct RouterParameters memory"
																		}
																	},
																	"id": 187,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1611:5:1",
																	"memberName": "weth9",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "1604:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1617:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "1604:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1622:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1604:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1632:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1604:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1569:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "IfStatement",
												"src": "1565:102:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 193,
															"name": "InvalidRouterParameters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 195,
													"nodeType": "RevertStatement",
													"src": "1635:32:1"
												}
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "PERMIT2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1678:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllowanceTransfer_$453",
															"typeString": "contract IAllowanceTransfer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 199,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "1707:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																		"typeString": "struct RouterParameters memory"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1714:7:1",
																"memberName": "permit2",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 85,
																"src": "1707:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 198,
															"name": "IAllowanceTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "1688:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAllowanceTransfer_$453_$",
																"typeString": "type(contract IAllowanceTransfer)"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1688:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllowanceTransfer_$453",
															"typeString": "contract IAllowanceTransfer"
														}
													},
													"src": "1678:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllowanceTransfer_$453",
														"typeString": "contract IAllowanceTransfer"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1678:44:1"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1732:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$251",
															"typeString": "contract IWETH9"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 206,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "1747:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																		"typeString": "struct RouterParameters memory"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1754:5:1",
																"memberName": "weth9",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 87,
																"src": "1747:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 205,
															"name": "IWETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1740:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWETH9_$251_$",
																"typeString": "type(contract IWETH9)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1740:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$251",
															"typeString": "contract IWETH9"
														}
													},
													"src": "1732:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH9_$251",
														"typeString": "contract IWETH9"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1732:28:1"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "UNISWAP_V2_FACTORY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1770:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 212,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1791:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																"typeString": "struct RouterParameters memory"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1798:9:1",
														"memberName": "v2Factory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "1791:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1770:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1770:37:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 216,
														"name": "UNISWAP_V2_PAIR_INIT_CODE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1817:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 217,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1850:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																"typeString": "struct RouterParameters memory"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1857:16:1",
														"memberName": "pairInitCodeHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 93,
														"src": "1850:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1817:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1817:56:1"
											},
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "UNISWAP_V3_FACTORY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1883:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 222,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1904:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																"typeString": "struct RouterParameters memory"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1911:9:1",
														"memberName": "v3Factory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 91,
														"src": "1904:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1883:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1883:37:1"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "UNISWAP_V3_POOL_INIT_CODE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1930:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 227,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1963:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
																"typeString": "struct RouterParameters memory"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1970:16:1",
														"memberName": "poolInitCodeHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "1963:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1930:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1930:56:1"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1102:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1078:30:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RouterParameters_$96_memory_ptr",
													"typeString": "struct RouterParameters"
												},
												"typeName": {
													"id": 121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 120,
														"name": "RouterParameters",
														"nameLocations": [
															"1078:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 96,
														"src": "1078:16:1"
													},
													"referencedDeclaration": 96,
													"src": "1078:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RouterParameters_$96_storage_ptr",
														"typeString": "struct RouterParameters"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:1"
									},
									"scope": 233,
									"src": "1066:927:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 234,
							"src": "440:1555:1",
							"usedErrors": [
								119
							]
						}
					],
					"src": "45:1952:1"
				},
				"id": 1
			},
			"contracts/interfaces/external/IWETH9.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/IWETH9.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IWETH9": [
							251
						]
					},
					"id": 252,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 78,
							"src": "70:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "78:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 239,
										"name": "IERC20",
										"nameLocations": [
											"193:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "193:6:2"
									},
									"id": 240,
									"nodeType": "InheritanceSpecifier",
									"src": "193:6:2"
								}
							],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "142:31:2",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								77
							],
							"name": "IWETH9",
							"nameLocation": "183:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "206:46:2",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "266:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:0:2"
									},
									"scope": 251,
									"src": "257:36:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "299:47:2",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "360:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "369:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:9:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:0:2"
									},
									"scope": 251,
									"src": "351:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "173:216:2",
							"usedErrors": []
						}
					],
					"src": "45:345:2"
				},
				"id": 2
			},
			"lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
				"ast": {
					"absolutePath": "lib/permit2/src/interfaces/IAllowanceTransfer.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							453
						]
					},
					"id": 454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAllowanceTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "58:233:3",
								"text": "@title AllowanceTransfer\n @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "IAllowanceTransfer",
							"nameLocation": "301:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "326:145:3",
										"text": "@notice Thrown when an allowance on a token has expired.\n @param deadline The timestamp at which the allowed amount is no longer valid"
									},
									"errorSelector": "d81b2f2e",
									"id": 259,
									"name": "AllowanceExpired",
									"nameLocation": "482:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "507:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "499:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:18:3"
									},
									"src": "476:41:3"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "523:115:3",
										"text": "@notice Thrown when an allowance on a token has been depleted.\n @param amount The maximum amount allowed"
									},
									"errorSelector": "f96fb071",
									"id": 264,
									"name": "InsufficientAllowance",
									"nameLocation": "649:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "679:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "671:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:16:3"
									},
									"src": "643:44:3"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "693:56:3",
										"text": "@notice Thrown when too many nonces are invalidated."
									},
									"errorSelector": "24d35a26",
									"id": 267,
									"name": "ExcessiveInvalidation",
									"nameLocation": "760:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:2:3"
									},
									"src": "754:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "790:84:3",
										"text": "@notice Emits an event when the owner successfully invalidates an ordered nonce."
									},
									"eventSelector": "55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3",
									"id": 280,
									"name": "NonceInvalidation",
									"nameLocation": "885:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "928:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "912:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "951:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "935:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "974:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "958:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": false,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "990:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "983:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 275,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "983:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldNonce",
												"nameLocation": "1007:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1000:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 277,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1000:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:119:3"
									},
									"src": "879:143:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1028:99:3",
										"text": "@notice Emits an event when the owner successfully sets permissions on a token for the spender."
									},
									"eventSelector": "da9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b",
									"id": 293,
									"name": "Approval",
									"nameLocation": "1138:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1172:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1156:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1195:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1179:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1218:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1202:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1235:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1227:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 288,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1250:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1243:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 290,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1243:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:120:3"
									},
									"src": "1132:135:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "1273:124:3",
										"text": "@notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
									},
									"eventSelector": "c6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec",
									"id": 308,
									"name": "Permit",
									"nameLocation": "1408:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1440:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1424:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1471:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1455:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1486:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1527:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1519:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 301,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1550:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1543:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 303,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1543:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1577:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1570:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 305,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1570:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:174:3"
									},
									"src": "1402:187:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1595:98:3",
										"text": "@notice Emits an event when the owner sets the allowance back to 0 with the lockdown function."
									},
									"eventSelector": "89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4",
									"id": 317,
									"name": "Lockdown",
									"nameLocation": "1704:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1729:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1713:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1744:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1736:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": false,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1759:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1751:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:55:3"
									},
									"src": "1698:70:3"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitDetails",
									"id": 326,
									"members": [
										{
											"constant": false,
											"id": 319,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1888:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "1880:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 318,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1880:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1958:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "1950:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 320,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1950:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 323,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "2055:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "2048:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 322,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2048:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 325,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2170:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "2163:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 324,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2163:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitDetails",
									"nameLocation": "1825:13:3",
									"nodeType": "StructDefinition",
									"scope": 453,
									"src": "1818:364:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitSingle",
									"id": 334,
									"members": [
										{
											"constant": false,
											"id": 329,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2356:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 334,
											"src": "2342:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PermitDetails_$326_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails"
											},
											"typeName": {
												"id": 328,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 327,
													"name": "PermitDetails",
													"nameLocations": [
														"2342:13:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 326,
													"src": "2342:13:3"
												},
												"referencedDeclaration": 326,
												"src": "2342:13:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$326_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 331,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2435:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 334,
											"src": "2427:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 330,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2427:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 333,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2504:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 334,
											"src": "2496:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 332,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2496:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitSingle",
									"nameLocation": "2265:12:3",
									"nodeType": "StructDefinition",
									"scope": 453,
									"src": "2258:264:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitBatch",
									"id": 343,
									"members": [
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2702:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 343,
											"src": "2686:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PermitDetails_$326_storage_$dyn_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails[]"
											},
											"typeName": {
												"baseType": {
													"id": 336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 335,
														"name": "PermitDetails",
														"nameLocations": [
															"2686:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 326,
														"src": "2686:13:3"
													},
													"referencedDeclaration": 326,
													"src": "2686:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$326_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"id": 337,
												"nodeType": "ArrayTypeName",
												"src": "2686:15:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PermitDetails_$326_storage_$dyn_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2781:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 343,
											"src": "2773:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 339,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2773:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2850:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 343,
											"src": "2842:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2842:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatch",
									"nameLocation": "2607:11:3",
									"nodeType": "StructDefinition",
									"scope": 453,
									"src": "2600:268:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PackedAllowance",
									"id": 350,
									"members": [
										{
											"constant": false,
											"id": 345,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3163:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 350,
											"src": "3155:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 344,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3155:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "3215:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 350,
											"src": "3208:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 346,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3208:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 349,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "3330:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 350,
											"src": "3323:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 348,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3323:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PackedAllowance",
									"nameLocation": "3103:15:3",
									"nodeType": "StructDefinition",
									"scope": 453,
									"src": "3096:246:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.TokenSpenderPair",
									"id": 355,
									"members": [
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3473:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "3465:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 351,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3465:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "3527:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "3519:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3519:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenSpenderPair",
									"nameLocation": "3393:16:3",
									"nodeType": "StructDefinition",
									"scope": 453,
									"src": "3386:155:3",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.AllowanceTransferDetails",
									"id": 364,
									"members": [
										{
											"constant": false,
											"id": 357,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "3677:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "3669:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 356,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3669:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 359,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "3737:2:3",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "3729:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 358,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3729:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3792:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "3784:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 360,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3784:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 363,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3855:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 364,
											"src": "3847:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 362,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3847:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AllowanceTransferDetails",
									"nameLocation": "3600:24:3",
									"nodeType": "StructDefinition",
									"scope": 453,
									"src": "3593:274:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3873:455:3",
										"text": "@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
									},
									"functionSelector": "927da105",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4342:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4352:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4361:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4361:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4370:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4370:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:27:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4402:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 373,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4402:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4411:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 375,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4411:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4419:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 377,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4419:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4401:25:3"
									},
									"scope": 453,
									"src": "4333:94:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "4433:498:3",
										"text": "@notice Approves the spender to use up to amount of the specified token up until the expiration\n @param token The token to approve\n @param spender The spender address to approve\n @param amount The approved amount of the token\n @param expiration The timestamp at which the approval is no longer valid\n @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"functionSelector": "87517c45",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4945:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4961:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4953:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4976:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4968:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4993:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4985:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 386,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "5008:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5001:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 388,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5001:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4952:67:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5028:0:3"
									},
									"scope": 453,
									"src": "4936:93:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "5035:407:3",
										"text": "@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2b67b570",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5456:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5471:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5463:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5463:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "5498:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5478:32:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$334_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "PermitSingle",
														"nameLocations": [
															"5478:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 334,
														"src": "5478:12:3"
													},
													"referencedDeclaration": 334,
													"src": "5478:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$334_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5527:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5512:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5512:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:75:3"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5546:0:3"
									},
									"scope": 453,
									"src": "5447:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "5553:411:3",
										"text": "@notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitBatch Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2a2d80d1",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5978:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5993:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "5985:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "6019:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6000:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$343_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 408,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 407,
														"name": "PermitBatch",
														"nameLocations": [
															"6000:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 343,
														"src": "6000:11:3"
													},
													"referencedDeclaration": 343,
													"src": "6000:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$343_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6047:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6032:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6032:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5984:73:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6066:0:3"
									},
									"scope": 453,
									"src": "5969:98:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "6073:386:3",
										"text": "@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "36c78516",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6473:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6494:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6486:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6508:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6500:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6520:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6512:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 420,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6528:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6528:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6485:57:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6551:0:3"
									},
									"scope": 453,
									"src": "6464:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "6558:264:3",
										"text": "@notice Transfer approved tokens in a batch\n @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n @dev Requires the from addresses to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "0d58b1db",
									"id": 434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6836:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "6885:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6849:51:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$364_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 429,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 428,
															"name": "AllowanceTransferDetails",
															"nameLocations": [
																"6849:24:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 364,
															"src": "6849:24:3"
														},
														"referencedDeclaration": 364,
														"src": "6849:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AllowanceTransferDetails_$364_storage_ptr",
															"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
														}
													},
													"id": 430,
													"nodeType": "ArrayTypeName",
													"src": "6849:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$364_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6848:53:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6910:0:3"
									},
									"scope": 453,
									"src": "6827:84:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "6917:167:3",
										"text": "@notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n by batch revoking approvals\n @param approvals Array of approvals to revoke."
									},
									"functionSelector": "cc53287f",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockdown",
									"nameLocation": "7098:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "approvals",
												"nameLocation": "7135:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "7107:37:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$355_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
												},
												"typeName": {
													"baseType": {
														"id": 437,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 436,
															"name": "TokenSpenderPair",
															"nameLocations": [
																"7107:16:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 355,
															"src": "7107:16:3"
														},
														"referencedDeclaration": 355,
														"src": "7107:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenSpenderPair_$355_storage_ptr",
															"typeString": "struct IAllowanceTransfer.TokenSpenderPair"
														}
													},
													"id": 438,
													"nodeType": "ArrayTypeName",
													"src": "7107:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$355_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7106:39:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7154:0:3"
									},
									"scope": 453,
									"src": "7089:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "7161:332:3",
										"text": "@notice Invalidate nonces for a given (token, spender) pair\n @param token The token to invalidate nonces for\n @param spender The spender to invalidate nonces for\n @param newNonce The new nonce to set. Invalidates all nonces less than it.\n @dev Can't invalidate more than 2**16 nonces per transaction."
									},
									"functionSelector": "65d9723c",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateNonces",
									"nameLocation": "7507:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7532:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7524:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7547:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7539:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "7563:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7556:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 448,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "7556:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7523:49:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:3"
									},
									"scope": 453,
									"src": "7498:84:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 454,
							"src": "291:7293:3",
							"usedErrors": [
								259,
								264,
								267
							]
						}
					],
					"src": "32:7553:3"
				},
				"id": 3
			}
		}
	}
}